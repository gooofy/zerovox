{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "train g2p de",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/train_g2p.py",
            "console": "integratedTerminal",
            "args": ["--accelerator=gpu",
                     "--max_epochs=100",
                     "--warmup_epochs=10",
                     "--val_epochs=1",
                     "--lr=0.0001",
                     "--batch-size=384",
                     "--out-dir=models/g2p_de_autoreg_zamia_1",
                     "--lang=de",
                     "configs/g2p_de_autoreg_zamia.yaml"],
            "cwd": "${workspaceFolder}",
            "justMyCode": false
        },
        // {
        //     "name": "train g2p de cont",
        //     "type": "debugpy",
        //     "request": "launch",
        //     "program": "utils/train_g2p.py",
        //     "console": "integratedTerminal",
        //     "args": ["--accelerator=gpu",
        //              "--max_epochs=1000",
        //              "--warmup_epochs=10",
        //              "--val_epochs=1",
        //              "--lr=0.0001",
        //              "--batch-size=384",
        //              "--out-dir=models/g2p_de_autoreg_zamia_2",
        //              "--checkpoint=models/g2p_de_autoreg_zamia_1/checkpoints/epoch=30-loss=0.06.ckpt",
        //              "configs/g2p_de_autoreg.yaml", "lexicon/german_mfa.dict"],
        //     "cwd": "${workspaceFolder}",
        //     "justMyCode": false
        // },
        {
            "name": "g2p inference",
            "type": "debugpy",
            "request": "launch",
            "program": "zerovox/g2p/g2p.py",
            "console": "integratedTerminal",
            "args": [],
            "cwd": "${workspaceFolder}",
            "justMyCode": false
        },
        {
            "name": "lexcheck",
            "type": "debugpy",
            "request": "launch",
            "program": "priv/utils/lexcheck.py",
            "console": "integratedTerminal",
            "args": [],
            "cwd": "${workspaceFolder}",
            "justMyCode": false
        },
        {
            "name": "oovtool",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/oovtool.py",
            "console": "integratedTerminal",
            //"args": ["configs/corpora/cv_de_100/de_cv_speaker_80.yaml"],
            "args": ["configs/corpora/cv_de_100"],
            "cwd": "${workspaceFolder}",
            "justMyCode": false
        },
        {
            "name": "import zamia lex",
            "type": "debugpy",
            "request": "launch",
            "program": "priv/utils/import-zamia-lex.py",
            "console": "integratedTerminal",
            "args": [],
            "cwd": "${workspaceFolder}",
            "justMyCode": false
        },
        {
            "name": "lexstat",
            "type": "debugpy",
            "request": "launch",
            "program": "priv/utils/lexstat.py",
            "console": "integratedTerminal",
            "args": [],
            "cwd": "${workspaceFolder}",
            "justMyCode": false
        },
        {
            "name": "prepare align cv 100",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/prepare_align.py",
            "console": "integratedTerminal",
            //"args": ["configs/corpora/cv_de_100"],
            "args": ["configs/corpora/cv_de_100/de_cv_speaker_0.yaml"],
            "cwd": "${workspaceFolder}",
            "justMyCode": false
        },
        {
            "name": "train kaldi",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/train_kaldi.py",
            "console": "integratedTerminal",
            "args": ["--oovs=oovs.dict",
                     "--num-jobs=12",
                     "configs/corpora/cv_de_100/de_cv_speaker_0.yaml",
                     "configs/corpora/de_hui/de_hui_Alexandra_Bogensperger.yaml",
                     "configs/corpora/de_hui/de_hui_Algy_Pug.yaml",
                     "configs/corpora/de_hui/de_hui_Anka.yaml",
                     "configs/corpora/de_hui/de_hui_Availle.yaml",
                     "configs/corpora/de_hui/de_hui_Bernd_Ungerer.yaml",
                     "configs/corpora/de_hui/de_hui_Boris.yaml",
                     "configs/corpora/de_hui/de_hui_Capybara.yaml",
                     "configs/corpora/de_hui/de_hui_caromopfen.yaml",
                     "configs/corpora/de_hui/de_hui_Christian_Al-Kadi.yaml",
                     "configs/corpora/de_hui/de_hui_ClaudiaSterngucker.yaml",
                     "configs/corpora/de_hui/de_hui_Crln_Yldz_Ksr.yaml",
                    ]
        },
        {
            "name": "align cv 0001",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/align.py",
            "console": "integratedTerminal",
            "args": ["--oovs=oovs.dict",
                     "configs/corpora/cv_de_100/de_cv_speaker_0.yaml"]
        },       
    ]
}