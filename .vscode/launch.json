{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        
        {
            "name": "train g2p de",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/train_g2p.py",
            "console": "integratedTerminal",
            "args": ["--accelerator=gpu",
                     "--max_epochs=100",
                     "--warmup_epochs=10",
                     "--val_epochs=1",
                     "--lr=0.0001",
                     "--batch-size=384",
                     "--out-dir=models/g2p_de_autoreg_zamia_1",
                     "--lang=de",
                     "configs/g2p_de_autoreg_zamia.yaml"],
            "cwd": "${workspaceFolder}",
            "justMyCode": false
        },
        // {
        //     "name": "train g2p de cont",
        //     "type": "debugpy",
        //     "request": "launch",
        //     "program": "utils/train_g2p.py",
        //     "console": "integratedTerminal",
        //     "args": ["--accelerator=gpu",
        //              "--max_epochs=1000",
        //              "--warmup_epochs=10",
        //              "--val_epochs=1",
        //              "--lr=0.0001",
        //              "--batch-size=384",
        //              "--out-dir=models/g2p_de_autoreg_zamia_2",
        //              "--checkpoint=models/g2p_de_autoreg_zamia_1/checkpoints/epoch=30-loss=0.06.ckpt",
        //              "configs/g2p_de_autoreg.yaml", "lexicon/german_mfa.dict"],
        //     "cwd": "${workspaceFolder}",
        //     "justMyCode": false
        // },
        {
            "name": "g2p inference",
            "type": "debugpy",
            "request": "launch",
            "program": "zerovox/g2p/g2p.py",
            "console": "integratedTerminal",
            "args": [],
            "cwd": "${workspaceFolder}",
            "justMyCode": false
        },
        {
            "name": "lexcheck",
            "type": "debugpy",
            "request": "launch",
            "program": "priv/utils/lexcheck.py",
            "console": "integratedTerminal",
            "args": [],
            "cwd": "${workspaceFolder}",
            "justMyCode": false
        },
        {
            "name": "oovtool",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/oovtool.py",
            "console": "integratedTerminal",
            //"args": ["configs/corpora/cv_de_100/de_cv_speaker_80.yaml"],
            "args": ["-m", "models/g2p_de_autoreg_zamia_1/checkpoints",
                     "configs/corpora/cv_de_100"],
            "cwd": "${workspaceFolder}",
            "justMyCode": false
        },
        {
            "name": "import zamia lex",
            "type": "debugpy",
            "request": "launch",
            "program": "priv/utils/import-zamia-lex.py",
            "console": "integratedTerminal",
            "args": [],
            "cwd": "${workspaceFolder}",
            "justMyCode": false
        },
        {
            "name": "lexstat",
            "type": "debugpy",
            "request": "launch",
            "program": "priv/utils/lexstat.py",
            "console": "integratedTerminal",
            "args": [],
            "cwd": "${workspaceFolder}",
            "justMyCode": false
        },
        {
            "name": "prepare align cv 100",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/prepare_align.py",
            "console": "integratedTerminal",
            //"args": ["configs/corpora/cv_de_100"],
            "args": ["configs/corpora/cv_de_100/de_cv_speaker_0.yaml"],
            "cwd": "${workspaceFolder}",
            "justMyCode": false
        },
        {
            "name": "train kaldi",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/train_kaldi.py",
            "console": "integratedTerminal",
            "args": ["--model-name=tts_de_kaldi_zamia_1",
                     "--num-jobs=12",
                     "configs/corpora/cv_de_100",
                     "configs/corpora/cv_de_100/de_cv_speaker_0.yaml",
                     "configs/corpora/de_hui",
                    ]
        },
        {
            "name": "align cv 0001",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/align.py",
            "console": "integratedTerminal",
            "args": ["--kaldi-model=tts_de_kaldi_zamia_1",
                     "configs/corpora/cv_de_100/de_cv_speaker_0.yaml"
                    ]
        },       
        {
            "name": "preprocess Karlsson",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/preprocess.py",
            "console": "integratedTerminal",
            "args": ["configs/corpora/de_hui/de_hui_Karlsson.yaml"]
        },
        {
            "name": "train karlsson medium cpu",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/train_tts.py",
            "console": "integratedTerminal",
            "args": ["-c", "configs/tts_medium.yaml",
                     "--accelerator=cpu", "--threads=24",
                     "--infer-device=cpu",                     
                     "--hifigan-checkpoint=VCTK_V2",
                     "--out-folder=models/tts_de_zerovox_medium_karlsson",
                     //"configs/corpora/cv_de_100/de_cv_speaker_1.yaml"
                     "configs/corpora/de_hui/de_hui_Karlsson.yaml"
                    ],
            "justMyCode": false
        },       
        {
            "name": "demo german",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/demo.py",
            "console": "integratedTerminal",
            "args": [
                     "--model=models/tts_de_zerovox_medium_1",
                     //"--model=models/tts_de_zerovox_medium_hui",
                     "--verbose",
                     //"--refaudio=/home/guenter/projects/hal9000/ennis/voices/6s/en_digitalsculler_03.wav",
                     //"--refaudio=/home/guenter/projects/hal9000/ennis/voices/6s/de_tobias_meister_03.wav",
                     //"--refaudio=/home/guenter/projects/hal9000/ennis/voices/6s/de_christoph_wittelsbürger_03.wav",
                     "--refaudio=preprocessed_data/de_hui_Karlsson/wavs/dschinnistan_dschinnistan_01_f000093.wav",
                     "--play",
                     //"--iter=100",
                     "--text",
                     "Der Regenbogen ist ein atmosphärisch-optisches Phänomen, das als kreisbogenförmiges farbiges Lichtband in einem von der Sonne beschienenen Regenschauer erscheint.",
                     //"Der,Regenbogen!ist ein?atmosphärisch-optisches Phänomen, das.",
                     //"Der,das.",
                     "--wav-filename=medium.wav"]
        },
        {
            "name": "demo german interactive",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/demo.py",
            "console": "integratedTerminal",
            "args": [
                     "--model=models/tts_de_zerovox_medium_1",
                     "--verbose",
                     "--refaudio=../voices/12s/angela_merkel.wav",
                     "--play",
                     "-i"
                    ]
        },
        {
            "name": "lexedit",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/lexedit.py",
            "console": "integratedTerminal",
            "args": [
                     "--model=models/tts_de_zerovox_medium_1",
                     "--verbose",
                     "--refaudio=preprocessed_data/de_hui_Karlsson/wavs/dschinnistan_dschinnistan_02_f000023.wav",
                     "-e", "hallo"
                   ]
        },
        {
            "name": "foo",
            "type": "debugpy",
            "request": "launch",
            "program": "priv/utils/phonetable.py",
            "console": "integratedTerminal",
            "args": []
        },
        {
            "name": "review_lj_corpus",
            "type": "debugpy",
            "request": "launch",
            "program": "utils/review_lj_corpus.py",
            "console": "integratedTerminal",
            "args": [
                "--model=models/tts_de_zerovox_medium_1",
                //"--model=models/tts_de_zerovox_medium_hui",
                //"--verbose",
                //"--refaudio=/home/guenter/projects/hal9000/ennis/voices/6s/en_digitalsculler_03.wav",
                //"--refaudio=/home/guenter/projects/hal9000/ennis/voices/6s/de_tobias_meister_03.wav",
                //"--refaudio=/home/guenter/projects/hal9000/ennis/voices/6s/de_christoph_wittelsbürger_03.wav",
                "--refaudio=preprocessed_data/de_hui_Karlsson/wavs/dschinnistan_dschinnistan_01_f000093.wav",
                "/home/guenter/projects/hal9000/ennis/voices/src/dlf/presseschau/sorted/de_christoph_wittelsbürger/presseschau_dlf_20230311_0704_3545b479"
            ],
            "justMyCode": false
        },   
    ]
}